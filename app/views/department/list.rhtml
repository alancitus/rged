<link id="theme" rel="stylesheet" type="text/css" href="/javascripts/extjs/resources/css/xtheme-aero.css">
<script type="text/javascript" src="/javascripts/extjs/adapter/ext/ext-base.js"></script>
<script type="text/javascript" src="/javascripts/extjs/ext-all-debug.js"></script>
<script type="text/javascript">
Ext.onReady(function() {
Ext.QuickTips.init();
var tree = new Ext.tree.TreePanel('tree-div', {
        animate:true,
        enableDD:true,
        containerScroll: true
 //       rootVisible: false
      //  loader:new Ext.tree.TreeLoader()
    });
    
var ctree = new Ext.tree.TreePanel('ctree-div', {
        animate:true,
        enableDD:true,
        containerScroll: true,
        rootVisible: true
      //  loader:new Ext.tree.TreeLoader()
    }); 

var tree_editor = new Ext.tree.TreeEditor(tree, {
    autosize:true
});

var cmdCallback= function (options, bSuccess, response) {
            var o;
            var showMsg = true;
            if (true === bSuccess) {
                o = Ext.decode(response.responseText);
                if (true === o.success) {
                } else {
                        Ext.Msg.alert(this.errorText, o.error);
                }
            }
        };

var OnBeforeNodeDrop = function(event) {
      var options = {
              url: '/department/move'
              , method: 'post'
              , callback: cmdCallback
              , params: {
                      id_child: event.data.node.id
                      , id_father: event.target.id
              }
      };
    if (node.id !== "-1")                                
      conn = new Ext.data.Connection().request(options);
    };

var TextChange = function (node, newtext, oldtext) {
      var options = {
              url: '/department/rename'
              , method: 'post'
              , callback: cmdCallback
              , params: {
                      id_node: node.id
                      , old_name: oldtext
                      , new_name: newtext
              }
      };
      if (newtext !== oldtext && node.id !== "-1") {
          conn = new Ext.data.Connection().request(options);
      }
    };

var Remove = function (node) {
    var cmdCallback2  = function (options, bSuccess, response) {
            var o;
            var showMsg = true;
            if (true === bSuccess) {
                o = Ext.decode(response.responseText);
                if (true === o.success) {
                    var n = tree.getNodeById(node.id);
                    n.parentNode.removeChild(n);
                } else {
                        Ext.Msg.alert(this.errorText, o.error);
                }
            }
        };
    Ext.Msg.confirm('<%= _("Remove") %>'
                , '<%= _("Do you really want delete: ") %>' + '<b>' + node.text + '</b>?'
                , function(response) {
                        var conn;
                        // do nothing if answer is not yes
                        if('yes' !== response) {
                                return;
                        }
                        // answer is yes
                        else {
                                // setup request options
                                options = {
                                        url: '/department/delete'
                                        , method: 'post'
                                        , callback: cmdCallback2
                                        , params: {
                                                id:node.id
                                                , name:node.text
                                        }
                                };
                                // send request
                                if (node.id !== "-1")                                  
                                  conn = new Ext.data.Connection().request(options);
                        }
                }
                , tree
        );
    };

var DeleteOne = function (node) {
    var cmdCallback2  = function (options, bSuccess, response) {
            var o;
            var showMsg = true;
            if (true === bSuccess) {
                o = Ext.decode(response.responseText);
                if (true === o.success) {
                    var n = tree.getNodeById(node.id);
                    n.parentNode.removeChild(n);
                } else {
                        Ext.Msg.alert(this.errorText, o.error);
                }
            }
        };
    Ext.Msg.confirm('<%= _("Remove") %>'
                , '<%= _("Do you really want delete: ") %>' + '<b>' + node.text + '</b>?'
                , function(response) {
                        var conn;
                        // do nothing if answer is not yes
                        if('yes' !== response) {
                                return;
                        }
                        // answer is yes
                        else {
                                // setup request options
                                options = {
                                            url: '/department/delete_one'
                                        , method: 'post'
                                        , callback: cmdCallback2
                                        , params: {
                                                id:node.id
                                                , name:node.text
                                        }
                                };
                                // send request
                               if (node.id !== "-1")
                                    conn = new Ext.data.Connection().request(options);
                        }
                }
                , tree
        );
    };
    
var DeleteCountry = function (node) {
    var cmdCallback2  = function (options, bSuccess, response) {
            var o;
            var showMsg = true;
            if (true === bSuccess) {
                o = Ext.decode(response.responseText);
                if (true === o.success) {
                    var n = tree.getNodeById(node.id);
                    n.parentNode.removeChild(n);
                } else {
                        Ext.Msg.alert(this.errorText, o.error);
                }
            }
        };
    Ext.Msg.confirm('<%= _("Remove") %>'
                , '<%= _("Do you really want delete: ") %>' + '<b>' + node.text + '</b>?'
                , function(response) {
                        var conn;
                        // do nothing if answer is not yes
                        if('yes' !== response) {
                                return;
                        }
                        // answer is yes
                        else {
                                // setup request options
                                options = {
                                            url: '/country/delete_country'
                                        , method: 'post'
                                        , callback: cmdCallback2
                                        , params: {
                                                id:node.id
                                                , name:node.text
                                        }
                                };
                                // send request
                               if (node.id !== "-1")
                                    conn = new Ext.data.Connection().request(options);
                        }
                }
                , tree
        );
    };    
    
var Rename = function(node) {
        Ext.Msg.prompt('<%= _("Rename") %>'
                , '<%= _("Rename ") %>' + '<b>' + node.text + '</b> to ?'
                , function(response, newname) {
                        var conn;
                        var cmdCallback2  = function (options, bSuccess, response) {
                            var o;
                            var showMsg = true;
                            if (true === bSuccess) {
                                o = Ext.decode(response.responseText);
                                if (true === o.success) {
                                    var n = tree.getNodeById(node.id);
                                    n.setText(newname);
                                } else {
                                        Ext.Msg.alert(this.errorText, o.error);
                                }
                            }
                        };
                        // do nothing if answer is not yes
                        if('ok' !== response || node.text === newname) {
                                return;
                        }
                        // answer is yes
                        else {
                            var options = {
                              url: '/department/rename'
                              , method: 'post'
                              , callback: cmdCallback2
                              , params: {
                                      id_node: node.id
                                      , old_name: node.text
                                      , new_name: newname
                              }
                            };
                            if (node.id !== "-1")
                                conn = new Ext.data.Connection().request(options);
                        }
                }
                , this
        );
    };

var NewCountry = function(node) {
        Ext.Msg.prompt('<%= _("New Department") %>'
                , '<%= _("New Department name ?") %>'
                , function(response, newname) {
                        var conn;
                        var cmdCallback2= function (options, bSuccess, response) {
                            var o;
                            var showMsg = true;
                            if (true === bSuccess) {
                                o = Ext.decode(response.responseText);
                                if (true === o.success) {
                                    ctree.getRootNode().appendChild(new Ext.tree.TreeNode({
                                                            text:newname,
                                                            id:o.id
                                                        }));                
                                } else {
                                        Ext.Msg.alert(this.errorText, o.error);
                                }
                            }
                        };
                        // do nothing if answer is not yes
                        if('ok' !== response) {
                                return;
                        }
                        // answer is yes
                        else {
                            var options = {
                              url: '/country/new_country'
                              , method: 'post'
                              , callback: cmdCallback2
                              , params: {
                                       name: newname
                                       , id: node.id
                              }
                            };
                            conn = new Ext.data.Connection().request(options);
                        }
                }
                , this
        );
    };    
    
var NewDepartment = function(node) {
        Ext.Msg.prompt('<%= _("New Department") %>'
                , '<%= _("New Department name ?") %>'
                , function(response, newname) {
                        var conn;
                        var cmdCallback2= function (options, bSuccess, response) {
                            var o;
                            var showMsg = true;
                            if (true === bSuccess) {
                                o = Ext.decode(response.responseText);
                                if (true === o.success) {
                                    var n = tree.getNodeById(node.id);
                                    n.appendChild(new Ext.tree.TreeNode({
                                                            text:newname,
                                                            id:o.parent
                                                        }));
                                    n.expandChildNodes();                    
                                } else {
                                        Ext.Msg.alert(this.errorText, o.error);
                                }
                            }
                        };
                        // do nothing if answer is not yes
                        if('ok' !== response) {
                                return;
                        }
                        // answer is yes
                        else {
                            var options = {
                              url: '/department/new_department'
                              , method: 'post'
                              , callback: cmdCallback2
                              , params: {
                                      id: node.id
                                      , name: newname
                              }
                            };
                            conn = new Ext.data.Connection().request(options);
                        }
                }
                , this
        );
    };

var onContextMenuItem = function(item, e) {

        // menu item switch
        switch(item.id) {
                // {{{
                case 'rename':
                        Rename(item.node);
                break;
                // }}}
                // {{{
                case 'delete_all':
                        Remove(item.node);
                break;
                // }}}
                // {{{
                case 'new':
                        NewDepartment(item.node);
                break;
                // }}}
                // {{{
                case 'delete':
                        DeleteOne(item.node);
                break;
                // }}}

         }; // end of switch(item.id)
    };
        
    
    
var ConContextMenuItem = function(item, e) {

        // menu item switch
        switch(item.id) {
                // {{{
                case 'rename':
                        CRename(item.node);
                break;
                // }}}
                // {{{
                case 'new':
                        NewCountry(item.node);
                break;
                // }}}
                // {{{
                case 'delete':
                        DeleteCountry(item.node);
                break;
                // }}}

         }; // end of switch(item.id)
    };    

var ContextMenu = function (node, event) {
    //event.stopEvent();
    event.preventDefault();
    contextMenu = new Ext.menu.Menu({
                    items: [
                                    // node name we're working with placeholder
                              { id:'nodename', disabled:true, cls:'x-filetree-nodename'}
                            , new Ext.menu.Separator({id:'sep-open'})
                            , {	id:'rename'
                                    , text:'<%= _("Rename") %>'
                                    , node:node
                                    , e:event
                                    , handler:onContextMenuItem
                            }
                            , {	id:'delete'
                                    , text:'<%= _("Delete") %>'
                                    , node:node
                                    , handler:onContextMenuItem
                            }
                            , {	id:'delete_all'
                                    , text:'<%= _("Delete all") %>'
                                    , node:node
                                    , handler:onContextMenuItem
                            }
                            , {	id:'new'
                                    , text:'<%= _("New") %>'
                                    , node:node
                                    , handler:onContextMenuItem
                            }
                            
                    ]
            });

  contextMenu.item = node;

  // set menu item text to node text
  var itemNodename = contextMenu.items.get('nodename');
  itemNodename.setText(Ext.util.Format.ellipsis(node.text, 25));

  contextMenu.showAt(contextMenu.getEl().getAlignToXY(event.target, 'tl-tl?', [0, 18]));
  itemNodename.container.setStyle('opacity', 1);
};

var CContextMenu = function (node, event) {
    //event.stopEvent();
    event.preventDefault();
    contextMenu = new Ext.menu.Menu({
                    items: [
                                    // node name we're working with placeholder
                              { id:'nodename', disabled:true, cls:'x-filetree-nodename'}
                            , new Ext.menu.Separator({id:'sep-open'})
                            , {	id:'rename'
                                    , text:'<%= _("Rename") %>'
                                    , node:node
                                    , e:event
                                    , handler:ConContextMenuItem
                            }
                            , {	id:'delete'
                                    , text:'<%= _("Delete") %>'
                                    , node:node
                                    , handler:ConContextMenuItem
                            }                          
                            , {	id:'new'
                                    , text:'<%= _("New") %>'
                                    , node:node
                                    , handler:ConContextMenuItem
                            }
                            
                    ]
            });

  contextMenu.item = node;

  // set menu item text to node text
  var itemNodename = contextMenu.items.get('nodename');
  itemNodename.setText(Ext.util.Format.ellipsis(node.text, 25));

  contextMenu.showAt(contextMenu.getEl().getAlignToXY(event.target, 'tl-tl?', [0, 18]));
  itemNodename.container.setStyle('opacity', 1);
};

var root = new Ext.tree.TreeNode({
    id:"-1",
    text:"<%= _("Root") %>"
});

var croot = new Ext.tree.TreeNode({
    id:"-1",
    text:"<%= _("Countries_Root") %>"
});

ctree.setRootNode(croot);
tree.setRootNode(root);

<% for department in @department %>
    var node<%= department.id %> = new Ext.tree.TreeNode({
            text:"<%= department.name %>",
            id:"<%= department.id %>"
            });
    <% if department.parent_id != nil && department.parent_id != 0 %>
        node<%= department.parent_id%>.appendChild(node<%= department.id %>);
    <%else%>
            root.appendChild(node<%= department.id %>); 
    <%end%>
<% end %>

<% for country in Country.find_all %>
    var cnode<%= country.id %> = new Ext.tree.TreeNode({
            text:"<%= country.name %>",
            id:"<%= country.id %>"
            });
    croot.appendChild(cnode<%= country.id %>); 
<% end %>

    // render the tree
tree.render();
tree.getRootNode().expand();
tree.expandAll();

ctree.render();
ctree.getRootNode().expand();
ctree.expandAll();

tree.on("beforenodedrop", OnBeforeNodeDrop);
tree.on("textchange", TextChange);
tree.on("contextmenu", ContextMenu);

//ctree.on("beforenodedrop", OnBeforeNodeDrop);
//ctree.on("textchange", TextChange);
ctree.on("contextmenu", CContextMenu);

});
</script>

<h3><%= _("Department List") %></h3>
<div id="tree-div"></div>
<div id="ctree-div"></div>